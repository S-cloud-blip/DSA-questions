Fibonacci

//Iterative 

#include<iostream>
using namespace std;
int main()
{
    int t1=0,t2=1,s=0,n=5;     //t1= first term t2= second term s = sum
    if(n<=1)
        return n;
    for(int i=2;i<=n;i++)
    {
        s=t1+t2;
        t1=t2;
        t2=s;
    }
    return s;
}

//Recursive

#include<iostream>
using namespace std;
int fib(int n)
{
    if(n<=1)
        return n;
    return fib(n-2)+fib(n-1);
}
int main()
{
    int n=5;
    cout<<fib(n);
    return 0;
}

//Recursion modified by memoisation

#include<iostream>
using namespace std;
int F[10];
int fib(int n)
{
    if(n<=1)
    {
        F[n] = n;
        return n;
    }
    else
    {
        if(F[n-2]==-1)
            F[n-2] = fib(n-2);
        if(F[n-1]==-1)
            F[n-1] = fib(n-1);
        
        F[n] = F[n-2]+F[n-1];
        
        return F[n-2]+F[n-1];
    }
    //return F[n-2]+F[n-1];
}
int main()
{
    int n=5;
    for(int i=0;i<10;i++)
    {
        F[i]=-1;
    }
    cout<<fib(n);
}

